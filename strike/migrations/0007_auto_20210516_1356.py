# Generated by Django 3.2.3 on 2021-05-16 07:56

import datetime
from django.db import migrations, models

def load_sources(apps,schema_editor):
    Source = apps.get_model("strike", "Source")
    source = Source(id = 0, name = 'СМИ/Блогер/Лидер мнения', is_active = True)
    source.save()
    source = Source(id = 1, name = 'Работники/участники протеста', is_active = True)
    source.save()
    source = Source(id = 2, name = 'Профсоюз', is_active = True)
    source.save()
    source = Source(id = 3, name = 'Представитель коллектива', is_active = True)
    source.save()
    source = Source(id = 4, name = 'Государственные органы', is_active = True)
    source.save()
    source = Source(id = 5, name = 'Не правительственные организации /гражданские активисты', is_active = True)
    source.save()

def load_countries(apps, schema_editor):
    Country = apps.get_model("strike", "Country")
    country = Country(id=0, name='Россия', is_active=True)
    country.save()
    country = Country(id=1, name='Кыргызстан', is_active=True)
    country.save()
    country = Country(id=2, name='Казахстан', is_active=True)
    country.save()

def load_employees_count(apps, schema_editor):
    EmployeesCount = apps.get_model("strike", "EmployeesCount")
    emps_count = EmployeesCount(id=0, choice='до 50 человек', is_active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=1, choice='от 50 до 200 человек', is_active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=2, choice='от 200 до 1500 человек', is_active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=3, choice='более 1500 человек', is_active=True)
    emps_count.save()

def load_participants_count(apps, schema_editor):
    ParticipantsCount = apps.get_model("strike", "ParticipantsCount")
    count = ParticipantsCount(id=0, choice='менее 10 человек', is_active=True)
    count.save()
    count = ParticipantsCount(id=1, choice='10-50 человек', is_active=True)
    count.save()
    count = ParticipantsCount(id=2, choice='51-100 человек', is_active=True)
    count.save()
    count = ParticipantsCount(id=3, choice='101-1000 человек', is_active=True)
    count.save()
    count = ParticipantsCount(id=4, choice='более 1000 человек', is_active=True)
    count.save()

def load_demands(apps, schema_editor):
    DemandType = apps.get_model("strike", "DemandType")
    type1 = DemandType(id=0, demand='Экономический', active=True)
    type1.save()
    type2 = DemandType(id=1, demand='Политический', active=True)
    type2.save()
    type3 = DemandType(id=2, demand='Смешанный', active=True)
    type3.save()

    DemandCategory = apps.get_model("strike", "DemandCategory")
    cat = DemandCategory(id=0,name='Оплата труда',demand_type=type1,is_active=True)
    cat.save()
    cat = DemandCategory(id=1,name='Охрана труда и здоровье',demand_type=type1,is_active=True)
    cat.save()
    cat = DemandCategory(id=2,name='Вопросы занятости уволенных/сокращенных работников, безработных',demand_type=type1,is_active=True)
    cat.save()
    cat = DemandCategory(id=3,name='Сокращение рабочего времени',demand_type=type1,is_active=True)
    cat.save()
    cat = DemandCategory(id=4,name='Другое',demand_type=type1,is_active=True)
    cat.save()

    cat = DemandCategory(id=5, name='Смена руководства предприятия', demand_type=type2, is_active=True)
    cat.save()
    cat = DemandCategory(id=6, name='Смена руководителей исполнительной власти', demand_type=type2, is_active=True)
    cat.save()
    cat = DemandCategory(id=7, name='Проведение политических реформ в стране', demand_type=type2, is_active=True)
    cat.save()
    cat = DemandCategory(id=8, name='Другое', demand_type=type2, is_active=True)
    cat.save()

    cat = DemandCategory(id=9, name='Требования связанные с профсоюзной деятельностью', demand_type=type3, is_active=True)
    cat.save()
    cat = DemandCategory(id=10, name='Другое', demand_type=type3, is_active=True)
    cat.save()



def load_regions(apps, schema_editor):
    Region = apps.get_model("strike", "Region")
    Country = apps.get_model("strike", "Country")
    region = Region(id=0, name='г. Москва', is_active=True, country = Country(id = 0))
    region.save()
    # region = Region(id=1, name='Кыргызстан', is_active=True)
    # region.save()
    # region = Region(id=2, name='Казахстан', is_active=True)
    # region.save()

class Migration(migrations.Migration):

    dependencies = [
        ('strike', '0006_auto_20210516_1347'),
    ]

    operations = [
        migrations.AlterField(
            model_name='card',
            name='end_date',
            field=models.DateTimeField(default=datetime.datetime(2021, 5, 16, 13, 56, 57, 992039), verbose_name='Дата конца проведения забастовки/акции'),
        ),
        migrations.AlterField(
            model_name='card',
            name='start_date',
            field=models.DateTimeField(default=datetime.datetime(2021, 5, 16, 13, 56, 57, 992039), verbose_name='Дата начало проведения забастовки/акции'),
        ),

        migrations.RunPython(load_sources),
        migrations.RunPython(load_countries),
        migrations.RunPython(load_regions),
        migrations.RunPython(load_demands),
        migrations.RunPython(load_employees_count),
        migrations.RunPython(load_participants_count),
    ]
