# Generated by Django 3.2.3 on 2021-05-31 15:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import strike.models
from strike.load.strike_dump import load_strikes


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Возраст')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Возраст',
                'verbose_name_plural': 'Возраст',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='№')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('source_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Источник информации (ссылка)')),
                ('source_content', models.TextField(blank=True, null=True, verbose_name='Текст статьи/сообщения ')),
                ('city_name', models.CharField(max_length=100, null=True, verbose_name='Название города')),
                ('company_name', models.CharField(max_length=100, verbose_name='Название предприятия (юридического лица)')),
                ('company_country_name', models.CharField(blank=True, max_length=100, verbose_name='Страна происхождения компании')),
                ('company_is_tnk_member', models.CharField(blank=True, choices=[('YES', 'Да'), ('NO', 'Нет')], max_length=20, null=True, verbose_name='Является ли эта кампания частью ТНК (Транснациональная компания)')),
                ('company_tnk_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название ТНК (Транснациональная компания), в которую входит эта кампания')),
                ('economic_another', models.CharField(blank=True, help_text='Введите значение', max_length=50, null=True, verbose_name='Другое')),
                ('politic_another', models.CharField(blank=True, help_text='Введите значение', max_length=50, null=True, verbose_name='Другое')),
                ('combo_another', models.CharField(blank=True, help_text='Введите значение', max_length=50, null=True, verbose_name='Другое')),
                ('start_date', models.DateTimeField(verbose_name='Дата начало проведения забастовки/акции')),
                ('end_date', models.DateTimeField(verbose_name='Дата конца проведения забастовки/акции')),
                ('tradeunionChoiceAnother', models.CharField(blank=True, help_text='Введите значение', max_length=50, null=True, verbose_name='Другое')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Дата последних изменений')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('story', models.TextField(max_length=1800, verbose_name='Укажите ПОСЛЕДОВАТЕЛЬНО, что произошло. Параллельно указывайте, чем подтверждаются эти факты (если есть приложения, укажите сразу номера и названия соответствующих приложений) ')),
                ('reasons_for_strike', models.TextField(max_length=1800, verbose_name='Опишите причины начала забастовки (например: условия труда на предприятии, продолжительность рабочего времени, безопасность и т.д. время, связанное с работой)')),
                ('change_number_participants', models.TextField(max_length=1800, verbose_name='Опишите как менялось количество участников забастовки во время проведения и что на это влияло?')),
                ('initiators_and_participants', models.TextField(max_length=1800, verbose_name='Ситуация с инициаторами и участниками забастовки/акции (продолжают ли они работать, применялись ли к ним административные меры со стороны предприятия). ')),
                ('state_position', models.TextField(max_length=1800, verbose_name='Позиция государства (Опишите реакцию государственных органов)')),
                ('results_so_far', models.TextField(max_length=1800, verbose_name='Опишите, с какими итогами закончилась забастовка, если еще не закончилась, то какие итоги на данный момент.')),
                ('additional_information', models.TextField(blank=True, null=True, verbose_name='Любая дополнительная информация')),
                ('case_text', models.TextField(blank=True, max_length=1800, null=True, verbose_name='Окно для внесения информации')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Монитор')),
            ],
            options={
                'verbose_name': 'Карточка',
                'verbose_name_plural': 'Карточки',
            },
        ),
        migrations.CreateModel(
            name='ComboDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Смешанный',
                'verbose_name_plural': 'Смешанный',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='DemandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demand_cat_name', models.CharField(max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Характер требования',
                'verbose_name_plural': 'Характеры требований',
            },
        ),
        migrations.CreateModel(
            name='EconomicDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Экономический',
                'verbose_name_plural': 'Экономические',
            },
        ),
        migrations.CreateModel(
            name='EmployeesCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=255, verbose_name='Выбор')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Количество сотрудников предприятия',
                'verbose_name_plural': 'Количество сотрудников предприятия',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_name', models.CharField(help_text='Название', max_length=100, verbose_name='Название')),
                ('emp_contacts', models.CharField(help_text='Реквизиты (контакты/адрес и т.д.) ', max_length=200, verbose_name='Реквизиты (контакты/адрес и т.д.) ')),
            ],
            options={
                'verbose_name': 'Работодатель',
                'verbose_name_plural': 'Работодатели',
            },
        ),
        migrations.CreateModel(
            name='GroupCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Характер групп',
                'verbose_name_plural': 'Характеры групп',
            },
        ),
        migrations.CreateModel(
            name='Initiator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='ФИО', max_length=150, verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'Инициатор забастовки/акции',
                'verbose_name_plural': 'Инициаторы забастовки/акции',
            },
        ),
        migrations.CreateModel(
            name='MeetingRequirment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Удовлетворение требований ',
                'verbose_name_plural': 'Удовлетворения требований',
            },
        ),
        migrations.CreateModel(
            name='OwnerShipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Форма собственности',
                'verbose_name_plural': 'Формы собственности',
            },
        ),
        migrations.CreateModel(
            name='ParticipantsCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=255, verbose_name='Выбор')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Количество участников забастовки',
                'verbose_name_plural': 'Количество участников забастовки',
            },
        ),
        migrations.CreateModel(
            name='PoliticDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Политический',
                'verbose_name_plural': 'Политический',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название источника', max_length=100, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Источник',
                'verbose_name_plural': 'Источники',
            },
        ),
        migrations.CreateModel(
            name='StrikeCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Характер забастовки/акции',
                'verbose_name_plural': 'Характеры забастовки/акции',
            },
        ),
        migrations.CreateModel(
            name='TradeUnion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('visible', models.BooleanField(default=False, verbose_name='Видимый')),
            ],
            options={
                'verbose_name': 'Есть ли на предприятии профсоюзы',
            },
        ),
        migrations.CreateModel(
            name='TradeunionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Есть ли на предприятии профсоюз',
                'verbose_name_plural': 'Есть ли на предприятии профсоюзы',
            },
        ),
        migrations.CreateModel(
            name='TradeunionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tradeUnion_name', models.CharField(help_text='Название профсоюза', max_length=100, verbose_name='Название')),
                ('tradeUnion_contacts', models.CharField(help_text='Реквизиты (контакты/адрес и т.д.)', max_length=200, verbose_name='Реквизиты (контакты/адрес и т.д.) ')),
            ],
            options={
                'verbose_name': 'Профсоюз',
                'verbose_name_plural': 'Профсоюзы',
            },
        ),
        migrations.CreateModel(
            name='TradeUnionGroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Значение')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Членство в профсоюзе',
                'verbose_name_plural': 'Членства в профсоюзе',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.country')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='PersonGroupInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupCharacter_another', models.CharField(blank=True, help_text='Введите значение', max_length=50, null=True, verbose_name='Другое')),
                ('groupCharacter', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.groupcharacter', verbose_name='Характер группы')),
                ('tradeUnionMembership', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.tradeuniongroupmembership', verbose_name='Членство в профсоюзе')),
            ],
            options={
                'verbose_name': 'Группа лиц',
                'verbose_name_plural': 'Группы лиц',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_anonim', models.CharField(choices=[('YES', 'Да'), ('NO', 'Нет')], max_length=20, verbose_name='Анонимно')),
                ('individual_name', models.CharField(help_text='ФИО', max_length=150, verbose_name='ФИО')),
                ('gender', models.CharField(choices=[('MALE', 'Мужской'), ('FEMALE', 'Женский')], max_length=20, verbose_name='Пол')),
                ('profession', models.CharField(help_text='Профессия', max_length=100, verbose_name='Профессия')),
                ('age', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.age', verbose_name='Возраст')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.card')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
            },
        ),
        migrations.CreateModel(
            name='CardPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to=strike.models.photos_location, verbose_name='Фото/видео/документы')),
                ('card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.card')),
            ],
            options={
                'verbose_name': 'Фото/видео/документы ',
                'verbose_name_plural': 'Фото/видео/документы ',
            },
        ),
        migrations.CreateModel(
            name='CardFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=strike.models.files_location, verbose_name='Кейсы, связанные с забастовкой')),
                ('card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.card')),
            ],
            options={
                'verbose_name': 'Кейсы, связанные с забастовкой',
                'verbose_name_plural': 'Кейсы, связанные с забастовкой',
            },
        ),
        migrations.AddField(
            model_name='card',
            name='card_demand_categories',
            field=models.ManyToManyField(blank=True, null=True, to='strike.DemandCategory', verbose_name='Характер требований'),
        ),
        migrations.AddField(
            model_name='card',
            name='card_sources',
            field=models.ManyToManyField(to='strike.Source', verbose_name='Источник'),
        ),
        migrations.AddField(
            model_name='card',
            name='combo_demands',
            field=models.ManyToManyField(blank=True, null=True, to='strike.ComboDemand', verbose_name='Смешанный'),
        ),
        migrations.AddField(
            model_name='card',
            name='company_employees_count',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.employeescount', verbose_name='Общая численность работников на предприятии'),
        ),
        migrations.AddField(
            model_name='card',
            name='company_ownership_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.ownershiptype', verbose_name='Форма собственности компании'),
        ),
        migrations.AddField(
            model_name='card',
            name='count_strike_participants',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.participantscount', verbose_name='Количество участников забастовки/акции'),
        ),
        migrations.AddField(
            model_name='card',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='card',
            name='duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.strikecharacter', verbose_name='Характер забастовки/акции - сколько длилась'),
        ),
        migrations.AddField(
            model_name='card',
            name='economic_demands',
            field=models.ManyToManyField(blank=True, null=True, to='strike.EconomicDemand', verbose_name='Экономический'),
        ),
        migrations.AddField(
            model_name='card',
            name='employear',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.employer', verbose_name='Работодатель'),
        ),
        migrations.AddField(
            model_name='card',
            name='initiator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.initiator', verbose_name='Инициатор забастовки/акции'),
        ),
        migrations.AddField(
            model_name='card',
            name='meeting_requirements',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.meetingrequirment', verbose_name='Удовлетворение требований'),
        ),
        migrations.AddField(
            model_name='card',
            name='personGroupInfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.persongroupinfo', verbose_name='Группа лиц'),
        ),
        migrations.AddField(
            model_name='card',
            name='politic_demands',
            field=models.ManyToManyField(blank=True, null=True, to='strike.PoliticDemand', verbose_name='Политический'),
        ),
        migrations.AddField(
            model_name='card',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.region', verbose_name='Регион'),
        ),
        migrations.AddField(
            model_name='card',
            name='tradeunionChoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strike.tradeunionchoice', verbose_name='Есть ли на предприятии профсоюз'),
        ),
        migrations.AddField(
            model_name='card',
            name='tradeunion_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strike.tradeuniondata', verbose_name='Данные профсоюза'),
        ),
        migrations.RunPython(load_strikes)
    ]
