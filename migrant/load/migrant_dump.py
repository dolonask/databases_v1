def load_migrants(apps, schema_editor):
    print('VictimStatus')
    VictimStatus = apps.get_model("migrant", "VictimStatus")
    victimStatus = VictimStatus(id=1, name="Легальный трудовой мигрант", active=True)
    victimStatus.save()
    victimStatus = VictimStatus(id=2, name="Не легальный трудовой мигрант", active=True)
    victimStatus.save()
    victimStatus = VictimStatus(id=3, name="Нет информации", active=True)
    victimStatus.save()

    print('BanOnEntry')
    BanOnEntry = apps.get_model("migrant", "BanOnEntry")
    banOnEntry = BanOnEntry(id=1, name="Да", active=True)
    banOnEntry.save()
    banOnEntry = BanOnEntry(id=2, name="Нет", active=True)
    banOnEntry.save()
    banOnEntry = BanOnEntry(id=3, name="нет информации", active=True)
    banOnEntry.save()
    banOnEntry = BanOnEntry(id=4, name="другое", active=True)
    banOnEntry.save()

    print('InfoSource')
    InfoSource = apps.get_model("migrant", "InfoSource")
    source = InfoSource(id=1, name="Интервью с пострадавшим", active=True)
    source.save()
    source = InfoSource(id=2, name="Сообщение из СМИ", active=True)
    source.save()
    source = InfoSource(id=3, name="Информация от работодателя", active=True)
    source.save()
    source = InfoSource(id=4, name="Информация от юриста", active=True)
    source.save()
    source = InfoSource(id=5, name="Информация от НКО, правозащитной организации", active=True)
    source.save()
    source = InfoSource(id=6, name="Информация от правоохранительных органов", active=True)
    source.save()
    source = InfoSource(id=7, name="Информация от государственных органов", active=True)
    source.save()
    source = InfoSource(id=8, name="Информация от посольства/консульства", active=True)
    source.save()

    print('Right')
    Right = apps.get_model("migrant", "Right")
    right = Right(id=1, name="Оплата труда", active=True)
    right.save()
    right = Right(id=2, name="Время отдыха (нет выходных дней и отпусков)", active=True)
    right.save()
    right = Right(id=3, name="Доступ к социальному обеспечению и медицинскому обслуживанию", active=True)
    right.save()
    right = Right(id=4, name="Безопасность условий труда на работе", active=True)
    right.save()
    right = Right(id=5, name="Использование детского труда", active=True)
    right.save()
    right = Right(id=6,
                  name="Использование принудительного труда (забрали паспорт, не выплачивали заработную плату, угрожали, шантажировали, проявляли физическое/психологическое насилие т.п.)",
                  active=True)
    right.save()
    right = Right(id=7, name="Дискриминация в различных сферах трудовой деятельности", active=True)
    right.save()
    right = Right(id=8, name="Эксплуатация (трудовая)", active=True)
    right.save()
    right = Right(id=9, name="Доступ к гарантиям сохранения занятости", active=True)
    right.save()
    right = Right(id=10, name="Ограничение доступа к членству в профсоюзе", active=True)
    right.save()
    right = Right(id=11, name="Проведение консультации по трудовому законодательству", active=True)
    right.save()
    right = Right(id=12, name="Право на справедливое судебное разбирательство", active=True)
    right.save()
    right = Right(id=13, name="Сексуальные домогательства", active=True)
    right.save()
    right = Right(id=14, name="другое ", active=True)
    right.save()

    print('Education')
    Education = apps.get_model("migrant", "Education")
    education = Education(id=1, name="среднее (школа)", active=True)
    education.save()
    education = Education(id=2, name="средне специальное", active=True)
    education.save()
    education = Education(id=3, name="неоконченное высшее", active=True)
    education.save()
    education = Education(id=4, name="высшее", active=True)
    education.save()
    education = Education(id=5, name="краткосрочные профессиональные курсы", active=True)
    education.save()

    print('WayOfArrival')
    WayOfArrival = apps.get_model("migrant", "WayOfArrival")
    wayOfArrival = WayOfArrival(id=1, name="С помощью частного агентства занятости", active=True)
    wayOfArrival.save()
    wayOfArrival = WayOfArrival(id=2, name="Самостоятельно искал информацию по переезду", active=True)
    wayOfArrival.save()
    wayOfArrival = WayOfArrival(id=3, name="С помощью родственников/друзей/земляков", active=True)
    wayOfArrival.save()
    wayOfArrival = WayOfArrival(id=4, name="С помощью организации соотечественников в данном городе", active=True)
    wayOfArrival.save()
    wayOfArrival = WayOfArrival(id=5, name="Другое", active=True)
    wayOfArrival.save()

    print('WayOfFindingWork')
    WayOfFindingWork = apps.get_model("migrant", "WayOfFindingWork")
    wayOfFindingWork = WayOfFindingWork(id=1, name="Через Государственную службу миграции", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=2, name="Самостоятельно по объявлениям", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=3, name="Через агентства занятости по месту пребывания", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=4, name="Через частное агентство занятости, которое организовало поездку в эту страну", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=5, name="Через сайты поиска работы", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=6, name="С помощью родственников/друзей/земляков", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=7, name="Нет информации", active=True)
    wayOfFindingWork.save()
    wayOfFindingWork = WayOfFindingWork(id=8, name="Другое", active=True)
    wayOfFindingWork.save()


    print('TradeUnionMembership')
    TradeUnionMembership = apps.get_model("migrant", "TradeUnionMembership")
    tradeUnionMembership = TradeUnionMembership(id=1, name="Да", active=True)
    tradeUnionMembership.save()
    tradeUnionMembership = TradeUnionMembership(id=2, name="Нет", active=True)
    tradeUnionMembership.save()
    tradeUnionMembership = TradeUnionMembership(id=3, name="Состоял в профсоюзе в стране исхода", active=True)
    tradeUnionMembership.save()


    print('AgreementDetailYes')
    AgreementDetailYes = apps.get_model("migrant", "AgreementDetailYes")
    agreementDetailYes = AgreementDetailYes(id=1, name="Договор есть, но он не трудовой, а гражданско-правовой", active=True)
    agreementDetailYes.save()
    agreementDetailYes = AgreementDetailYes(id=2, name="Договор подписывал, но он остался у работодателя", active=True)
    agreementDetailYes.save()
    agreementDetailYes = AgreementDetailYes(id=3, name="Договор подписывал, но он остался у посредника", active=True)
    agreementDetailYes.save()
    agreementDetailYes = AgreementDetailYes(id=4, name="Подписан трудовой договор", active=True)
    agreementDetailYes.save()

    print('AgreementDetailNo')
    AgreementDetailNo = apps.get_model("migrant", "AgreementDetailNo")
    agreementDetailNo = AgreementDetailNo(id=1, name="Я не захотел подписывать", active=True)
    agreementDetailNo.save()
    agreementDetailNo = AgreementDetailNo(id=2, name="Работодатель не захотел подписывать", active=True)
    agreementDetailNo.save()
    agreementDetailNo = AgreementDetailNo(id=3, name="Договор подписывают, только с теми, кто работает на постоянной работе", active=True)
    agreementDetailNo.save()
    agreementDetailNo = AgreementDetailNo(id=4, name="С мигрантами вообще не подписывают договора", active=True)
    agreementDetailNo.save()

    print('WorkBookStatus')
    WorkBookStatus = apps.get_model("migrant", "WorkBookStatus")
    workBookStatus = WorkBookStatus(id=1, name="Да", active=True)
    workBookStatus.save()
    workBookStatus = WorkBookStatus(id=2, name="Нет", active=True)
    workBookStatus.save()
    workBookStatus = WorkBookStatus(id=3, name="У меня ее никогда не было", active=True)
    workBookStatus.save()
    workBookStatus = WorkBookStatus(id=4, name="была только в стране исхода", active=True)
    workBookStatus.save()
    workBookStatus = WorkBookStatus(id=5, name="есть, но в стране пребывания, работодатель не захотел оформлять", active=True)
    workBookStatus.save()

    print('WorkingDayDuration')
    WorkingDayDuration = apps.get_model("migrant", "WorkingDayDuration")
    workingDayDuration = WorkingDayDuration(id=1, name="Больше 8 часов в день (больше 40 часов в неделю)", active=True)
    workingDayDuration.save()
    workingDayDuration = WorkingDayDuration(id=2, name="Ровно 8 часов в день (40 часов в неделю)", active=True)
    workingDayDuration.save()
    workingDayDuration = WorkingDayDuration(id=3, name="Сменная работа", active=True)
    workingDayDuration.save()
    workingDayDuration = WorkingDayDuration(id=4, name="Вахтовая работа", active=True)
    workingDayDuration.save()
    workingDayDuration = WorkingDayDuration(id=5, name="Работаем, всегда по-разному (нет четкого графика)", active=True)
    workingDayDuration.save()

    print('WayOfGettingSalary')
    WayOfGettingSalary = apps.get_model("migrant", "WayOfGettingSalary")
    wayOfGettingSalary = WayOfGettingSalary(id=1, name="Через банк, согласно договору", active=True)
    wayOfGettingSalary.save()
    wayOfGettingSalary = WayOfGettingSalary(id=2, name="Наличными, согласно договору", active=True)
    wayOfGettingSalary.save()
    wayOfGettingSalary = WayOfGettingSalary(id=3, name="Часть согласно договору, часть в конверте", active=True)
    wayOfGettingSalary.save()
    wayOfGettingSalary = WayOfGettingSalary(id=4, name="Как договорюсь, за конкретную выполненную работу (всегда разная сумма)", active=True)
    wayOfGettingSalary.save()
    wayOfGettingSalary = WayOfGettingSalary(id=5, name="Только наличными, без договора (по устной договоренности)", active=True)
    wayOfGettingSalary.save()

    print('GroupType')
    GroupType = apps.get_model("migrant", "GroupType")
    groupType = GroupType(id=1, name="Бригада или производственная группа", active=True)
    groupType.save()
    groupType = GroupType(id=2, name="Определенная категория работников", active=True)
    groupType.save()
    groupType = GroupType(id=3, name="Работники разных категория, но подвергшиеся одинаковому нарушению прав", active=True)
    groupType.save()


    print('MembershipOfGroupPersons')
    MembershipOfGroupPersons = apps.get_model("migrant", "MembershipOfGroupPersons")
    membershipOfGroupPersons = MembershipOfGroupPersons(id=1, name="Все члены профсоюза", active=True)
    membershipOfGroupPersons.save()
    membershipOfGroupPersons = MembershipOfGroupPersons(id=2, name="Никто не состоит в профсоюзе", active=True)
    membershipOfGroupPersons.save()
    membershipOfGroupPersons = MembershipOfGroupPersons(id=3, name="Есть и члены профсоюза и не члены профсоюза", active=True)
    membershipOfGroupPersons.save()


    print('Intruder')
    Intruder = apps.get_model("migrant", "Intruder")
    intruder = Intruder(id=1, name="Государственные органы", active=True)
    intruder.save()
    intruder = Intruder(id=2, name="Органы местного самоуправления", active=True)
    intruder.save()
    intruder = Intruder(id=3, name="Правоохранительные органы", active=True)
    intruder.save()
    intruder = Intruder(id=4, name="Органы, контролирующие мигрантов", active=True)
    intruder.save()
    intruder = Intruder(id=5, name="Работодатель (компания)", active=True)
    intruder.save()
    intruder = Intruder(id=6, name="Работодатель (частное лицо)", active=True)
    intruder.save()

    OwnerShipType = apps.get_model("migrant", "OwnerShipType")
    type = OwnerShipType(id=1, name='Государственная', active=True)
    type.save()
    type = OwnerShipType(id=2, name='Национальная', active=True)
    type.save()
    type = OwnerShipType(id=3, name='Частная', active=True)
    type.save()
    type = OwnerShipType(id=4, name='Иностранная', active=True)
    type.save()
    type = OwnerShipType(id=5, name='Смешанная форма собственности (государственная, частная)', active=True)
    type.save()
    type = OwnerShipType(id=6, name='Смешанная форма собственности (с долей иностранного капитала)', active=True)
    type.save()

    print("EmployeesCount")
    EmployeesCount = apps.get_model("migrant", "EmployeesCount")
    emps_count = EmployeesCount(id=0, choice='малое до 50 человек', active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=1, choice='среднее от 50 до 200 чел ', active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=2, choice='крупное от 200 до 1000 чел', active=True)
    emps_count.save()
    emps_count = EmployeesCount(id=3, choice='очень большое - свыше 1000 чел.', active=True)
    emps_count.save()

    print("WorkPurpose")
    WorkPurpose = apps.get_model("migrant", "WorkPurpose")
    workPurpose = WorkPurpose(id=1, name='Сельскохозяйственные работы', active=True)
    workPurpose.save()
    workPurpose = WorkPurpose(id=2, name='Работа по дому (горничные)', active=True)
    workPurpose.save()
    workPurpose = WorkPurpose(id=3, name='ухаживать за животными', active=True)
    workPurpose.save()
    workPurpose = WorkPurpose(id=4, name='Воспитание детей', active=True)
    workPurpose.save()

    print("EntrepreneurEmployeesCount")
    EntrepreneurEmployeesCount = apps.get_model("migrant", "EntrepreneurEmployeesCount")
    entrepreneurEmployeesCount = EntrepreneurEmployeesCount(id=1, choice='1', active=True)
    entrepreneurEmployeesCount.save()
    entrepreneurEmployeesCount = EntrepreneurEmployeesCount(id=2, choice='от 3 до 5', active=True)
    entrepreneurEmployeesCount.save()
    entrepreneurEmployeesCount = EntrepreneurEmployeesCount(id=3, choice='от 5 до 10', active=True)
    entrepreneurEmployeesCount.save()
    entrepreneurEmployeesCount = EntrepreneurEmployeesCount(id=4, choice='более 10', active=True)
    entrepreneurEmployeesCount.save()

    print("PayWay")
    PayWay = apps.get_model("migrant", "PayWay")
    payWay = PayWay(id=1, name='Наличными', active=True)
    payWay.save()
    payWay = PayWay(id=2, name='Перечисляет на карту', active=True)
    payWay.save()
    payWay = PayWay(id=3, name='Высылает родителям/родственникам в страну исхода', active=True)
    payWay.save()

    print("HireWay")
    HireWay = apps.get_model("migrant", "HireWay")
    hireWay = HireWay(id=1, name='через частное агентство занятости', active=True)
    hireWay.save()
    hireWay = HireWay(id=2, name='через центр занятости', active=True)
    hireWay.save()
    hireWay = HireWay(id=3, name='по личной рекомендации', active=True)
    hireWay.save()
    hireWay = HireWay(id=4, name='привез их страны исхода мигранта', active=True)
    hireWay.save()
    hireWay = HireWay(id=5, name='работник сам пришел наниматься', active=True)
    hireWay.save()
    hireWay = HireWay(id=6, name='на уличной "бирже труда"', active=True)
    hireWay.save()
    hireWay = HireWay(id=7, name='Другое', active=True)
    hireWay.save()


    print('NatureViolation')
    NatureViolation = apps.get_model("migrant", "NatureViolation")
    natureViolation = NatureViolation(id=1, name="Разовое", active=True)
    natureViolation.save()
    natureViolation = NatureViolation(id=2, name="Системное", active=True)
    natureViolation.save()

    print('RightsState')
    RightsState = apps.get_model("migrant", "RightsState")
    rightsState = RightsState(id=1, name="Права восстановлены", active=True)
    rightsState.save()
    rightsState = RightsState(id=2, name="Права не восстановлены", active=True)
    rightsState.save()
    rightsState = RightsState(id=3, name="Права восстановлены частично", active=True)
    rightsState.save()
    rightsState = RightsState(id=4, name="Другое ", active=True)
    rightsState.save()

    print('Victim')
    Victim = apps.get_model("migrant", "Victim")
    victim = Victim(id=1, name="Физическое лицо", active=True)
    victim.save()
    victim = Victim(id=2, name="Группа лиц (работников)", active=True)
    victim.save()

    print('VictimSituation')
    VictimSituation = apps.get_model("migrant", "VictimSituation")
    victimSituation = VictimSituation(id=1, name="Продолжает (ют) работать", active=True)
    victimSituation.save()
    victimSituation = VictimSituation(id=2, name="Уволен(ы) под давлением работодателя", active=True)
    victimSituation.save()
    victimSituation = VictimSituation(id=3, name="Прекратил(и) работать добровольно", active=True)
    victimSituation.save()
    victimSituation = VictimSituation(id=4, name="Другое", active=True)
    victimSituation.save()

    print('TradeUnionSituation')
    TradeUnionSituation = apps.get_model("migrant", "TradeUnionSituation")
    tradeUnionSituation = TradeUnionSituation(id=1, name="Продолжает действовать", active=True)
    tradeUnionSituation.save()
    tradeUnionSituation = TradeUnionSituation(id=2, name="Продолжает существовать, но не действует", active=True)
    tradeUnionSituation.save()
    tradeUnionSituation = TradeUnionSituation(id=3, name="Прекратил существование", active=True)
    tradeUnionSituation.save()
    tradeUnionSituation = TradeUnionSituation(id=4, name="Другое", active=True)
    tradeUnionSituation.save()

    print('TradeUnionCount')
    TradeUnionCount = apps.get_model("migrant", "TradeUnionCount")
    tradeUnionCount = TradeUnionCount(id=1, choice="Численность сократилась", active=True)
    tradeUnionCount.save()
    tradeUnionCount = TradeUnionCount(id=2, choice="Численность увеличилась", active=True)
    tradeUnionCount.save()
    tradeUnionCount = TradeUnionCount(id=3, choice="Численность сохранилась", active=True)
    tradeUnionCount.save()

    print('ViolationType')
    ViolationType = apps.get_model("migrant", "ViolationType")
    violationType = ViolationType(id=1, name="Оплата труда стала меньше", active=True)
    violationType.save()
    violationType = ViolationType(id=2, name="Время работы увеличилось без оплаты", active=True)
    violationType.save()
    violationType = ViolationType(id=3, name="Не выдавали средства индивидуальной защиты", active=True)
    violationType.save()
    violationType = ViolationType(id=4, name="Не соблюдались санитарные нормы по обработке помещения", active=True)
    violationType.save()
    violationType = ViolationType(id=5, name="Отправили в отпуск без сохранения заработной платы", active=True)
    violationType.save()
    violationType = ViolationType(id=6, name="Уволили с работы в связи с пандемией", active=True)
    violationType.save()
    violationType = ViolationType(id=7, name="другое", active=True)
    violationType.save()

    print('Gender')
    Gender = apps.get_model("migrant", "Gender")
    gender = Gender(id=1, name="Мужчина", active=True)
    gender.save()
    gender = Gender(id=2, name="Женщина", active=True)
    gender.save()
    gender = Gender(id=3, name="Другое", active=True)
    gender.save()

    print('ChangesInSalary')
    ChangesInSalary = apps.get_model("migrant", "ChangesInSalary")
    changesInSalary = ChangesInSalary(id=1, name="Сократился доход, остался только оклад, без премий и надбавок", active=True)
    changesInSalary.save()
    changesInSalary = ChangesInSalary(id=2, name="Получаю столько же, сколько и раньше", active=True)
    changesInSalary.save()
    changesInSalary = ChangesInSalary(id=3, name="Увеличился доход", active=True)
    changesInSalary.save()
    changesInSalary = ChangesInSalary(id=4, name="уменьшился во время карантина, но сейчас снова увеличился", active=True)
    changesInSalary.save()
    changesInSalary = ChangesInSalary(id=5, name="Другое", active=True)
    changesInSalary.save()

    print('IndividualCountry')
    IndividualCountry = apps.get_model("migrant", "IndividualCountry")
    country = IndividualCountry(id=1, name="Российская Федерация", active=True)
    country.save()
    country = IndividualCountry(id=2, name="Республика Казахстан", active=True)
    country.save()
    country = IndividualCountry(id=3, name="Кыргызская Республика", active=True)
    country.save()
    country = IndividualCountry(id=4, name="Другое", active=True)
    country.save()

    print('CountryFrom')
    CountryFrom = apps.get_model("migrant", "CountryFrom")
    countryFrom = CountryFrom(id=1, name="Кыргызстан", active=True)
    countryFrom.save()
    countryFrom = CountryFrom(id=2, name="Казахстан", active=True)
    countryFrom.save()
    countryFrom = CountryFrom(id=3, name="Таджикистан", active=True)
    countryFrom.save()
    countryFrom = CountryFrom(id=4, name="Другое", active=True)
    countryFrom.save()


    print("Country")
    Country = apps.get_model("migrant", "Country")
    country = Country(id=1, name='Россия', active=True)
    country.save()
    Region = apps.get_model("migrant", "Region")

    region = Region(id=1, name='г.Москва', active=True, country=country)
    region.save()

    region = Region(id=2, name='Амурскаяобласть(Благовещенск)', active=True, country=country)
    region.save()

    region = Region(id=3, name='Архангельскаяобласть(Архангельск)', active=True, country=country)
    region.save()

    region = Region(id=4, name='Астраханскаяобласть(Астрахань)', active=True, country=country)
    region.save()

    region = Region(id=5, name='Белгородскаяобласть(Белгород)', active=True, country=country)
    region.save()

    region = Region(id=6, name='Брянскаяобласть(Брянск)', active=True, country=country)
    region.save()

    region = Region(id=7, name='Челябинскаяобласть(Челябинск)', active=True, country=country)
    region.save()

    region = Region(id=8, name='Иркутскаяобласть(Иркутск)', active=True, country=country)
    region.save()

    region = Region(id=9, name='Ивановскаяобласть(Иваново)', active=True, country=country)
    region.save()

    region = Region(id=10, name='Калининградскаяобласть(Калининград)', active=True, country=country)
    region.save()

    region = Region(id=11, name='Калужскаяобласть(Калуга)', active=True, country=country)
    region.save()

    region = Region(id=12, name='Кемеровскаяобласть—Кузбасс(Кемерово)', active=True, country=country)
    region.save()

    region = Region(id=13, name='Кировскаяобласть(Киров)', active=True, country=country)
    region.save()

    region = Region(id=14, name='Костромскаяобласть(Кострома)', active=True, country=country)
    region.save()

    region = Region(id=15, name='Курганскаяобласть(Курган)', active=True, country=country)
    region.save()

    region = Region(id=16, name='Курскаяобласть(Курск)', active=True, country=country)
    region.save()

    region = Region(id=17, name='Ленинградскаяобласть(Санкт Петербург)', active=True, country=country)
    region.save()

    region = Region(id=19, name='Липецкаяобласть(Липецк)', active=True, country=country)
    region.save()

    region = Region(id=20, name='Магаданскаяобласть(Магадан)', active=True, country=country)
    region.save()

    region = Region(id=21, name='Московскаяобласть(Москва)', active=True, country=country)
    region.save()

    region = Region(id=22, name='Мурманскаяобласть(Мурманск)', active=True, country=country)
    region.save()

    region = Region(id=23, name='Нижегородскаяобласть(НижнийНовгород)', active=True, country=country)
    region.save()

    region = Region(id=24, name='Новгородскаяобласть(ВеликийНовгород)', active=True, country=country)
    region.save()

    region = Region(id=25, name='Новосибирскаяобласть(Новосибирск)', active=True, country=country)
    region.save()

    region = Region(id=26, name='Омскаяобласть(Омск)', active=True, country=country)
    region.save()

    region = Region(id=27, name='Оренбургскаяобласть(Оренбург)', active=True, country=country)
    region.save()

    region = Region(id=28, name='Орловскаяобласть(Орёл)', active=True, country=country)
    region.save()

    region = Region(id=29, name='Пензенскаяобласть(Пенза)', active=True, country=country)
    region.save()

    region = Region(id=30, name='Псковскаяобласть(Псков)', active=True, country=country)
    region.save()

    region = Region(id=31, name='Ростовскаяобласть(Ростов на Дону)', active=True, country=country)
    region.save()

    region = Region(id=32, name='Рязанскаяобласть(Рязань)', active=True, country=country)
    region.save()

    region = Region(id=33, name='Сахалинскаяобласть(Южно Сахалинск)', active=True, country=country)
    region.save()

    region = Region(id=34, name='Самарскаяобласть(Самара)', active=True, country=country)
    region.save()

    region = Region(id=35, name='Саратовскаяобласть(Саратов)', active=True, country=country)
    region.save()

    region = Region(id=36, name='Смоленскаяобласть(Смоленск)', active=True, country=country)
    region.save()

    region = Region(id=37, name='Свердловскаяобласть(Екатеринбург)', active=True, country=country)
    region.save()

    region = Region(id=38, name='Тамбовскаяобласть(Тамбов)', active=True, country=country)
    region.save()

    region = Region(id=39, name='Томскаяобласть(Томск)', active=True, country=country)
    region.save()

    region = Region(id=40, name='Тверскаяобласть(Тверь)', active=True, country=country)
    region.save()

    region = Region(id=41, name='Тульскаяобласть(Тула)', active=True, country=country)
    region.save()

    region = Region(id=42, name='Тюменскаяобласть(Тюмень)', active=True, country=country)
    region.save()

    region = Region(id=43, name='Ульяновскаяобласть(Ульяновск)', active=True, country=country)
    region.save()

    region = Region(id=44, name='Владимирскаяобласть(Владимир)', active=True, country=country)
    region.save()

    region = Region(id=45, name='Волгоградскаяобласть(Волгоград)', active=True, country=country)
    region.save()

    region = Region(id=46, name='Вологодскаяобласть(Вологда)', active=True, country=country)
    region.save()

    region = Region(id=47, name='Воронежскаяобласть(Воронеж)', active=True, country=country)
    region.save()

    region = Region(id=48, name='Ярославскаяобласть(Ярославль)', active=True, country=country)
    region.save()


    country = Country(id=2, name='Кыргызстан', active=True)
    country.save()
    region = Region(name='г. Бишкек', active=True, country=country)
    region.save()
    region = Region(name='г. Ош', active=True, country=country)
    region.save()
    region = Region(name='Баткенская область', active=True, country=country)
    region.save()
    region = Region(name='Джалал-Абадская область', active=True, country=country)
    region.save()
    region = Region(name='Иссык-Кульская область', active=True, country=country)
    region.save()
    region = Region(name='Нарынская область', active=True, country=country)
    region.save()
    region = Region(name='Ошская область', active=True, country=country)
    region.save()
    region = Region(name='Таласская область', active=True, country=country)
    region.save()
    region = Region(name='Чуйская область', active=True, country=country)
    region.save()

    country = Country(id=3, name='Казахстан', active=True)
    country.save()
    region = Region(name='Нур-Султан (Астана)', active=True, country=country)
    region.save()
    region = Region(name='Алматы', active=True, country=country)
    region.save()
    region = Region(name='Шымкент', active=True, country=country)
    region.save()
    region = Region(name='Байконыр', active=True, country=country)
    region.save()
    region = Region(name='Акмолинская область', active=True, country=country)
    region.save()
    region = Region(name='Актюбинская область', active=True, country=country)
    region.save()
    region = Region(name='Алматинская область', active=True, country=country)
    region.save()
    region = Region(name='Атырауская область', active=True, country=country)
    region.save()
    region = Region(name='Восточно-Казахстанская область', active=True, country=country)
    region.save()
    region = Region(name='Жамбылская область', active=True, country=country)
    region.save()
    region = Region(name='Западно-Казахстанская область', active=True, country=country)
    region.save()
    region = Region(name='Карагандинская область', active=True, country=country)
    region.save()
    region = Region(name='Костанайская область', active=True, country=country)
    region.save()
    region = Region(name='Кызылординская область', active=True, country=country)
    region.save()
    region = Region(name='Мангистауская область', active=True, country=country)
    region.save()
    region = Region(name='Павлодарская область', active=True, country=country)
    region.save()
    region = Region(name='Севрено-Казахстанская область', active=True, country=country)
    region.save()
    region = Region(name='Туркестанская область', active=True, country=country)
    region.save()

    country = Country(id=4, name='Таджикистан', active=True)
    country.save()
    region = Region(name='г. Душанбе', active=True, country=country)
    region.save()
    region = Region(name='Горно - Бажахшанская область', active=True, country=country)
    region.save()
    region = Region(name='Согдийская область', active=True, country=country)
    region.save()
    region = Region(name='Хатлонская область', active=True, country=country)
    region.save()
    region = Region(name='Районы республиканского подчинения', active=True, country=country)
    region.save()

    country = Country(id=5, name='Туркменистан', active=True)
    country.save()
    region = Region(name='г. Ашхабад', active=True, country=country)
    region.save()
    region = Region(name='Ахалский велаят', active=True, country=country)
    region.save()
    region = Region(name='Балканский велаят', active=True, country=country)
    region.save()
    region = Region(name='Дашогузский велаят', active=True, country=country)
    region.save()
    region = Region(name='Лебапский велаят', active=True, country=country)
    region.save()
    region = Region(name='Марыйский велаят', active=True, country=country)
    region.save()
